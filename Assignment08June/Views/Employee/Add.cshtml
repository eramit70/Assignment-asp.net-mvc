
@model Assignment08June.Models.Employee

@{
    ViewBag.Title = "Add Employee";
}

<!-- jQuery CDN -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

<h2>Add Employee</h2>

@using (Html.BeginForm("Add", "Employee", FormMethod.Post))
{
    @Html.AntiForgeryToken()<div class="form-horizontal">
    <h4>Employee</h4>
    <hr />
    @if (TempData["error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <strong>TempData["error"] </strong> You should check in on some of those fields below.
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phonenumber, htmlAttributes: new { @class = "control-label col-md-2", maxlength = "10" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phonenumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phonenumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DesignationIdRef, "Designation", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.DesignationIdRef, ViewBag.Designations as SelectList, "Select Designation", new { @class = "form-control", id = "DesignationIdRef" })
            @Html.ValidationMessageFor(model => model.DesignationIdRef, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GradeIdref, "Grade", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.GradeIdref, ViewBag.Grades as SelectList, "Select Grade", new { @class = "form-control", id = "GradeIdref" })
            @Html.ValidationMessageFor(model => model.GradeIdref, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" id="SubmitBtn" onclick="CheckValidate(event)" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>


<script>
    $(document).ready(function () {
        $(function () {
            $('#Phonenumber').on('input', function () {
                this.value = this.value.replace(/\D/g, '').substring(0, 10);
            });
        });

    $("#DesignationIdRef").change(function () {
        var designationId = $(this).val();
        debugger
        $.ajax({
            url: '@Url.Action("GetGradesJson", "Employee")',
            type: "GET",
            data: { designationId: designationId },
            success: function (data) {
                debugger
                var gradeSelect = $("#GradeIdref");
                gradeSelect.empty();
                $.each(data, function (index, item) {
                    gradeSelect.append($("<option/>").val(item.Value).text(item.Text));
                });
            }
        });
    });

        

       
          
   
    
});

    function CheckValidate(event) { debugger
        if ($("#Firstname").val().trim() == "") {
            alert("Firstname is required.");
            $("#Firstname").focus();
            event.preventDefault();
            return;
        }

        if ($("#EmailAddress").val().trim() == "") {
            alert("Email Address is required.");
            $("#EmailAddress").focus();
            event.preventDefault();
            return;
        }

        if ($("#DesignationIdRef").val() == "") {
            alert("Designation is required.");
            $("#DesignationIdRef").focus();
            event.preventDefault();
            return;
        }
    }
</script>
